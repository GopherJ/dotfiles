{
  "languageserver": {
    "typst": {
        "command": "typst-lsp",
        "filetypes": ["typst"],
        "settings": {
		      "exportPdf": "onSave"
	      }
    },
    "zig": {
      "command": "zls",
      "filetypes": [
        "zig"
      ]
    }
  },
  "workspace.ignoredFolders": [
    "$HOME",
    "$HOME/.cargo/**",
    "$HOME/.rustup/**"
  ],
  "coc.preferences.formatOnSave": false,
  "coc.preferences.willSaveHandlerTimeout": 200,
  "coc.preferences.currentFunctionSymbolAutoUpdate": true,
  "coc.preferences.enableMessageDialog": false,
  "coc.preferences.maxFileSize": "1MB",
  "coc.preferences.enableMarkdown": true,
  "diagnostic.displayByAle": false,
  "colors.enable": true,
  "suggest.enablePreselect": false,
  "suggest.noselect": true,
  "suggest.triggerCompletionWait": 50,
  "list.source.grep.excludePatterns": [
    "**/*.min.js",
    "**/*.umd.js",
    "**/*.common.js"
  ],
  "vetur.ignoreProjectWarning": true,
  "vetur.format.defaultFormatter.html": "prettier",
  "vetur.format.options.tabSize": 2,
  "vetur.trace.server": "off",
  "diagnostic.enableHighlightLineNumber": false,
  "diagnostic.enableMessage": "jump",
  "diagnostic.messageTarget": "float",
  "diagnostic.virtualText": false,
  "diagnostic.messageDelay": 200,
  "diagnostic.level": "warning",
  "diagnostic.checkCurrentLine": false,
  "diagnostic.virtualTextLineSeparator": ". ",
  "codeLens.enable": true,
  "codeLens.separator": " ",
  "codeLens.subseparator": " | ",
  "tsserver.trace.server": "off",
  "tsserver.disableAutomaticTypeAcquisition": true,
  "rust-analyzer.inlayHints.bindingModeHints.enable": false,
  "rust-analyzer.inlayHints.chainingHints.enable": false,
  "rust-analyzer.inlayHints.closingBraceHints.enable": false,
  "rust-analyzer.inlayHints.closureReturnTypeHints.enable": "never",
  "rust-analyzer.inlayHints.discriminantHints.enable": "never",
  "rust-analyzer.inlayHints.expressionAdjustmentHints.enable": "never",
  "rust-analyzer.inlayHints.lifetimeElisionHints.enable": "never",
  "rust-analyzer.inlayHints.parameterHints.enable": false,
  "rust-analyzer.inlayHints.reborrowHints.enable": "never",
  "rust-analyzer.inlayHints.typeHints.enable": false,
  "rust-analyzer.imports.prefix": "crate",
  "rust-analyzer.diagnostics.disabled": [
    "inactive-code",
    "unlinked-file",
    "type-mismatch"
  ],
  "rust-analyzer.diagnostics.enable": true,
  "rust-analyzer.diagnostics.experimental.enable": false,
  "rust-analyzer.updates.channel": "stable",
  "rust-analyzer.procMacro.enable": false,
  "rust-analyzer.procMacro.attributes.enable": false,
  "rust-analyzer.updates.prompt": false,
  "rust-analyzer.checkOnSave": true,
  "rust-analyzer.lens.enable": false,
  "rust-analyzer.lens.run.enable": false,
  "rust-analyzer.lens.references.method.enable": false,
  "rust-analyzer.check.allTargets": true,
  "rust-analyzer.cargo.buildScripts.enable": false,
  "rust-analyzer.cargo.features": [],
  "rust-analyzer.lens.implementations.enable": false,
  "rust-analyzer.completion.postfix.enable": false,
  "rust-analyzer.trace.server": "off",
  "rust-analyzer.debug.runtime": "nvim-dap",
  "rust-analyzer.debug.vimspector.configuration.name": "rust - launch",
  "rust-analyzer.debug.nvimdap.configuration.template": "{ name = \"Debug (with args)\", type = \"codelldb\", request = \"launch\", program = $exe, args = $args, cwd = \"${workspaceFolder}\", stopOnEntry = false, terminal = \"integrated\" }",
  "rust-analyzer.terminal.startinsert": false,
  "rust-analyzer.completion.autoimport.enable": false,
  "rust-analyzer.rustfmt.rangeFormatting.enable": true,
  "rust-analyzer.disableProgressNotifications": true,
  "rust-analyzer.notifications.cargoTomlNotFound": false,
  "go.goplsOptions": {
    "completeUnimported": true
  },
  "go.disable": {
    "workspaceFolders": false
  },
  "go.trace.server": "off",
  "clangd.enabled": true,
  "clangd.arguments": ["--header-insertion=never"],
  "clangd.disableDiagnostics": true,
  "yank.highlight.enable": false,
  "prettier.singleQuote": true,
  "prettier.trailingComma": "es5",
  "prettier.tabWidth": 2,
  "prettier.semi": false,
  "prettier.useTabs": false,
  "prettier.bracketSpacing": true,
  "prettier.disableLanguages": [],
  "explorer.previewAction.onHover": false,
  "explorer.width": 30,
  "explorer.file.showHiddenFiles": true,
  "explorer.icon.enableNerdfont": true,
  "explorer.icon.source": "vim-devicons",
  "explorer.openAction.select.filter": {
    "buftypes": ["terminal"],
    "filetypes": ["vista_kind", "qf", "minimap"],
    "floatingWindows": true
  },
  "explorer.keyMappings.global": {
    "<space><space>": "noop",
    "<leader>k": ["wait", "markPrev:diagnosticError"],
    "<leader>j": ["wait", "markNext:diagnosticError"],
    "<leader>K": ["wait", "markPrev:diagnosticWarning"],
    "<leader>J": ["wait", "markNext:diagnosticWarning"],
    "f": "search",
    "F": "search:recursive",
    "d": "delete",
    "D": "deleteForever",
    ";k": ["wait", "markPrev:gitUnstaged"],
    ";j": ["wait", "markNext:gitUnstaged"],
    ">>": "gitStage",
    "<<": "gitUnstage"
  },
  "git.addGBlameToVirtualText": false,
  "git.addGBlameToBufferVar": true,
  "git.showCommitInFloating": false,
  "git.splitWindowCommand": "tab",
  "git.addedSign.hlGroup": "GitGutterAdd",
  "git.changedSign.hlGroup": "GitGutterChange",
  "git.removedSign.hlGroup": "GitGutterDelete",
  "git.topRemovedSign.hlGroup": "GitGutterDelete",
  "git.changeRemovedSign.hlGroup": "GitGutterChangeDelete",
  "eslint.autoFixOnSave": false,
  "eslint.run": "onSave",
  "toml.formatter.reorderKeys": true,
  "toml.formatter.alignEntries": true,
  "yaml.schemaStore.enable": false,
  "yaml.validate": false,
  "yaml.maxItemsComputed": 10000,
  "tabnine.priority": 80,
  "tabnine.disable_filetypes": [
    "html",
    "markdown",
    "vim",
    "jsonc",
    "toml",
    "yaml"
  ],
  "snippets.ultisnips.pythonPrompt": false,
  "python.pythonPath": "python3",
  "pyright.inlayHints.variableTypes": false,
  "pyright.inlayHints.parameterTypes": false,
  "pyright.inlayHints.functionReturnTypes": false,
  "python.analysis.typeCheckingMode": "off",
  "java.compile.nullAnalysis.mode": "disabled",
  "python.analysis.diagnosticMode": "workspace",
  "python.analysis.autoImportCompletions": true,
  "java.configuration.runtimes": [
    {
      "name": "JavaSE-17",
      "path": "/usr/lib/jvm/java-17-openjdk-amd64",
      "default": true
    }
  ],
  "python.analysis.diagnosticSeverityOverrides": {
    "reportPrivateImportUsage": "warning"
  },
  "@nomicfoundation/coc-solidity.telemetry": false,
  "json.maxItemsComputed": 10000
}
